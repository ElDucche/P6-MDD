# =============================================
# Docker Compose - Architecture Monolithique
# =============================================
# Utilisation :
#   - Complet : docker compose --profile all up -d
#   - Base de données seule : docker compose --profile postgres up -d
#   - Backend seul : docker compose --profile backend up -d
#   - Frontend seul : docker compose --profile frontend up -d

services:
  # Base de données PostgreSQL
  postgres:
    image: postgres:16
    container_name: mdd-postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-mdd}
      POSTGRES_USER: ${POSTGRES_USER:-mdd_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-mdd_password}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - ./infra/script.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
    profiles: [all, postgres, backend, frontend]

  # Application monolithique Spring Boot
  mdd-backend:
    build: ./back/mdd
    container_name: mdd-backend
    ports:
      - "${BACKEND_PORT:-8080}:8080"
    depends_on:
      - postgres
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/${POSTGRES_DB:-mdd}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER:-mdd_user}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD:-mdd_password}
      - JWT_SECRET=${JWT_SECRET:-monSecretJwtTresSolideEtComplexe}
    profiles: [all, backend]

  # Frontend Angular
  mdd-frontend:
    build:
      context: ./front/angular-app
      dockerfile: Dockerfile
    container_name: mdd-frontend
    ports:
      - "${FRONTEND_PORT:-4200}:80"
    depends_on:
      - mdd-backend
    profiles: [all, frontend]

# Volumes pour persistance des données
volumes:
  postgres_data:
