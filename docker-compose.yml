# =====================
# Multi-profil Compose
# =====================
# Utilisation :
#   - all : docker compose --profile all up
#   - user-service : docker compose --profile user-service up
#   - post-service : docker compose --profile post-service up
#   - bdd : docker compose --profile bdd up
#   - front : docker compose --profile front up

services:
  bdd:
    image: postgres:16
    container_name: mdd-postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ./infra/script.sql:/docker-entrypoint-initdb.d/init.sql
    profiles: [all, bdd, user-service, post-service, front, back]

  discovery-server:
    build: ./back/discovery-server
    container_name: mdd-discovery-server
    ports:
      - "${DISCOVERY_PORT}:8761"
    depends_on:
      - bdd
    profiles: [all, user-service, post-service, back]

  api-gateway:
    build: ./back/api-gateway
    container_name: mdd-api-gateway
    ports:
      - "${API_GATEWAY_PORT}:8080"
    depends_on:
      - discovery-server
    profiles: [all, user-service, post-service, back]
    environment:
      - JWT_SECRET=${JWT_SECRET}

  user-service:
    build: ./back/user-service
    container_name: mdd-user-service
    ports:
      - "${USER_SERVICE_PORT}:8081"
    depends_on:
      - api-gateway
      - bdd
    profiles: [all, user-service, back]
    environment:
      - JWT_SECRET=${JWT_SECRET}

  post-service:
    build: ./back/post-service
    container_name: mdd-post-service
    ports:
      - "${POST_SERVICE_PORT}:8082"
    depends_on:
      - api-gateway
      - bdd
    profiles: [all, post-service, back]
    environment:
      - JWT_SECRET=${JWT_SECRET}


  front:
    build:
      context: ./front/angular-app
      dockerfile: Dockerfile
    container_name: mdd-front
    ports:
      - "${FRONT_PORT}:80"
    depends_on:
      - api-gateway
    profiles: [all, front]
